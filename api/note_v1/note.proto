syntax = "proto3";

package api.node_v1;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/MuhahaSam/golangPractice/pkg/note_v1";

service NoteService {
    rpc CreateNote (CreateRequest) returns (CreateResponse){
        option (google.api.http) = {
            post: "/api/v1/note"
            body: "*"
        };
    };

    rpc GetNote (GetRequest) returns (GetResponse){
        option (google.api.http) = {
            get: "/api/v1/note"
        };
    };

    rpc UpdateNote (UpdateRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            patch: "/api/v1/note"
            body: "*"
        };
    };

    rpc DeleteNote (DeleteRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/api/v1/note"
        };
    };
}

message CreateRequest {
    string title = 1 [(validate.rules).string.min_len = 1];
    string text = 2 [(validate.rules).string.min_len = 1];
    string author = 3 [(validate.rules).string.min_len = 1];
}

message CreateResponse {
    string uuid = 1;
}

message GetRequest {
    string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetResponse {
    string uuid = 1;
    string title = 2;
    string text = 3;
    string author = 4;
}

message UpdateBody {
    google.protobuf.StringValue title = 1 [(validate.rules).string = {ignore_empty: true, min_len: 1}];
    google.protobuf.StringValue text = 2 [(validate.rules).string = {ignore_empty: true, min_len: 1}];
    google.protobuf.StringValue author = 3 [(validate.rules).string = {ignore_empty: true, min_len: 1}];
}

message UpdateRequest {
    string uuid = 1 [(validate.rules).string.uuid = true];
    UpdateBody updateBody = 2;
}

message DeleteRequest {
    string uuid = 1 [(validate.rules).string.uuid = true];
}


